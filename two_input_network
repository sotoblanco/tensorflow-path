{"metadata":{"kernelspec":{"language":"python","display_name":"Python 3","name":"python3"},"language_info":{"name":"python","version":"3.10.12","mimetype":"text/x-python","codemirror_mode":{"name":"ipython","version":3},"pygments_lexer":"ipython3","nbconvert_exporter":"python","file_extension":".py"},"kaggle":{"accelerator":"none","dataSources":[{"sourceType":"datasetVersion","sourceId":10698482,"datasetId":6629761,"databundleVersionId":11045744}],"dockerImageVersionId":30886,"isInternetEnabled":true,"language":"python","sourceType":"notebook","isGpuEnabled":false}},"nbformat_minor":4,"nbformat":4,"cells":[{"cell_type":"code","source":"# Imports\nfrom numpy import unique\nfrom tensorflow.keras.layers import Input, Embedding, Flatten\nfrom tensorflow.keras.models import Model\n# Import the Subtract layer from tensorflow.keras\nfrom tensorflow.keras.layers import Subtract\nimport pandas as pd\ngames_season = pd.read_csv(\"/kaggle/input/basketball/games_season.csv\")\ngames_tourney = pd.read_csv(\"/kaggle/input/basketball/games_tourney.csv\")\n\n# Count the unique number of teams\nn_teams = unique(games_season['team_1']).shape[0]\n\n# Create an embedding layer\nteam_lookup = Embedding(input_dim=n_teams,\n                        output_dim=1,\n                        name='Team-Strength')\n\n# Create an input layer for the team ID\nteamid_in = Input(shape=(1,))\n\n# Lookup the input in the team strength embedding layer\nstrength_lookup = team_lookup(teamid_in)\n\n# Flatten the output\nstrength_lookup_flat = Flatten()(strength_lookup)\n\n# Combine the operations into a single, re-usable model\nteam_strength_model = Model(teamid_in, strength_lookup_flat, name='Team-Strength-Model')\n\n# Input layer for team 1\nteam_in_1 = Input((1,), name='Team-1-In')\n\n# Separate input layer for team 2\nteam_in_2 = Input((1,), name='Team-2-In')\n# Lookup team 1 in the team strength model\nteam_1_strength = team_strength_model(team_in_1)\n\n# Lookup team 2 in the team strength model\nteam_2_strength = team_strength_model(team_in_2)\n\n# Create a subtract layer using the inputs from the previous exercise\nscore_diff = Subtract()([team_1_strength , team_2_strength])\n\n# Subtraction layer from previous exercise\nscore_diff = Subtract()([team_1_strength, team_2_strength])\n\n# Create the model\nmodel = Model([team_in_1, team_in_2], score_diff)\n\n# Compile the model\nmodel.compile(optimizer='adam', loss='mean_absolute_error')\n# Get the team_1 column from the regular season data\ninput_1 = games_season['team_1']\n\n# Get the team_2 column from the regular season data\ninput_2 = games_season['team_2']\n\n# Fit the model to input 1 and 2, using score diff as a target\nmodel.fit([input_1, input_2],\n          games_season['score_diff'],\n          epochs=1,\n          batch_size=2048,\n          validation_split=0.1,\n          verbose=True)\n# Get team_1 from the tournament data\ninput_1 = games_tourney['team_1']\n\n# Get team_2 from the tournament data\ninput_2 = games_tourney['team_2']\n\n# Evaluate the model using these inputs\nprint(model.evaluate([input_1, input_2], games_tourney['score_diff'], verbose=False))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:47:29.434849Z","iopub.execute_input":"2025-02-08T20:47:29.435289Z","iopub.status.idle":"2025-02-08T20:47:30.873481Z","shell.execute_reply.started":"2025-02-08T20:47:29.435251Z","shell.execute_reply":"2025-02-08T20:47:30.872282Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m138/138\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 12.1182 - val_loss: 11.8381\n11.678587913513184\n","output_type":"stream"}],"execution_count":28},{"cell_type":"code","source":"import pandas as pd","metadata":{"_uuid":"8f2839f25d086af736a60e9eeb907d3b93b6e0e5","_cell_guid":"b1076dfc-b9ad-4769-8c92-a6c4dae69d19","trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:39:34.810296Z","iopub.execute_input":"2025-02-08T20:39:34.810643Z","iopub.status.idle":"2025-02-08T20:39:34.815357Z","shell.execute_reply.started":"2025-02-08T20:39:34.810617Z","shell.execute_reply":"2025-02-08T20:39:34.814222Z"}},"outputs":[],"execution_count":15},{"cell_type":"code","source":"games_season = pd.read_csv(\"/kaggle/input/basketball/games_season.csv\")\ngames_tourney = pd.read_csv(\"/kaggle/input/basketball/games_tourney.csv\")","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:39:41.191076Z","iopub.execute_input":"2025-02-08T20:39:41.191478Z","iopub.status.idle":"2025-02-08T20:39:41.375614Z","shell.execute_reply.started":"2025-02-08T20:39:41.191449Z","shell.execute_reply":"2025-02-08T20:39:41.374388Z"}},"outputs":[],"execution_count":17},{"cell_type":"code","source":"# Imports\nfrom tensorflow.keras.layers import Embedding\nfrom numpy import unique\n\n# Count the unique number of teams\nn_teams = unique(games_season['team_1']).shape[0]\n\n# Create an embedding layer\nteam_lookup = Embedding(input_dim=n_teams,\n                        output_dim=1,\n                        name='Team-Strength')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:06.758203Z","iopub.execute_input":"2025-02-08T20:40:06.758546Z","iopub.status.idle":"2025-02-08T20:40:06.790363Z","shell.execute_reply.started":"2025-02-08T20:40:06.758523Z","shell.execute_reply":"2025-02-08T20:40:06.789103Z"}},"outputs":[],"execution_count":20},{"cell_type":"code","source":"# Imports\nfrom tensorflow.keras.layers import Input, Embedding, Flatten\nfrom tensorflow.keras.models import Model\n\n# Create an input layer for the team ID\nteamid_in = Input(shape=(1,))\n\n# Lookup the input in the team strength embedding layer\nstrength_lookup = team_lookup(teamid_in)\n\n# Flatten the output\nstrength_lookup_flat = Flatten()(strength_lookup)\n\n# Combine the operations into a single, re-usable model\nteam_strength_model = Model(teamid_in, strength_lookup_flat, name='Team-Strength-Model')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:08.384650Z","iopub.execute_input":"2025-02-08T20:40:08.384992Z","iopub.status.idle":"2025-02-08T20:40:08.400603Z","shell.execute_reply.started":"2025-02-08T20:40:08.384967Z","shell.execute_reply":"2025-02-08T20:40:08.399535Z"}},"outputs":[],"execution_count":21},{"cell_type":"code","source":"# Load the input layer from tensorflow.keras.layers\nfrom tensorflow.keras.layers import Input\n\n# Input layer for team 1\nteam_in_1 = Input((1,), name='Team-1-In')\n\n# Separate input layer for team 2\nteam_in_2 = Input((1,), name='Team-2-In')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:10.455292Z","iopub.execute_input":"2025-02-08T20:40:10.455667Z","iopub.status.idle":"2025-02-08T20:40:10.462737Z","shell.execute_reply.started":"2025-02-08T20:40:10.455637Z","shell.execute_reply":"2025-02-08T20:40:10.461262Z"}},"outputs":[],"execution_count":22},{"cell_type":"code","source":"# Lookup team 1 in the team strength model\nteam_1_strength = team_strength_model(team_in_1)\n\n# Lookup team 2 in the team strength model\nteam_2_strength = team_strength_model(team_in_2)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:12.784107Z","iopub.execute_input":"2025-02-08T20:40:12.784499Z","iopub.status.idle":"2025-02-08T20:40:12.791022Z","shell.execute_reply.started":"2025-02-08T20:40:12.784471Z","shell.execute_reply":"2025-02-08T20:40:12.789594Z"}},"outputs":[],"execution_count":23},{"cell_type":"code","source":"# Import the Subtract layer from tensorflow.keras\nfrom tensorflow.keras.layers import Subtract\n\n# Create a subtract layer using the inputs from the previous exercise\nscore_diff = Subtract()([team_1_strength , team_2_strength])","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:14.730805Z","iopub.execute_input":"2025-02-08T20:40:14.731159Z","iopub.status.idle":"2025-02-08T20:40:14.738497Z","shell.execute_reply.started":"2025-02-08T20:40:14.731111Z","shell.execute_reply":"2025-02-08T20:40:14.737066Z"}},"outputs":[],"execution_count":24},{"cell_type":"code","source":"# Imports\nfrom tensorflow.keras.layers import Subtract\nfrom tensorflow.keras.models import Model\n\n# Subtraction layer from previous exercise\nscore_diff = Subtract()([team_1_strength, team_2_strength])\n\n# Create the model\nmodel = Model([team_in_1, team_in_2], score_diff)\n\n# Compile the model\nmodel.compile(optimizer='adam', loss='mean_absolute_error')","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:16.687980Z","iopub.execute_input":"2025-02-08T20:40:16.688524Z","iopub.status.idle":"2025-02-08T20:40:16.705811Z","shell.execute_reply.started":"2025-02-08T20:40:16.688469Z","shell.execute_reply":"2025-02-08T20:40:16.704568Z"}},"outputs":[],"execution_count":25},{"cell_type":"code","source":"# Get the team_1 column from the regular season data\ninput_1 = games_season['team_1']\n\n# Get the team_2 column from the regular season data\ninput_2 = games_season['team_2']\n\n# Fit the model to input 1 and 2, using score diff as a target\nmodel.fit([input_1, input_2],\n          games_season['score_diff'],\n          epochs=1,\n          batch_size=2048,\n          validation_split=0.1,\n          verbose=True)","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:19.770610Z","iopub.execute_input":"2025-02-08T20:40:19.771044Z","iopub.status.idle":"2025-02-08T20:40:20.793641Z","shell.execute_reply.started":"2025-02-08T20:40:19.771010Z","shell.execute_reply":"2025-02-08T20:40:20.792478Z"}},"outputs":[{"name":"stdout","text":"\u001b[1m138/138\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 3ms/step - loss: 12.1154 - val_loss: 11.8383\n","output_type":"stream"},{"execution_count":26,"output_type":"execute_result","data":{"text/plain":"<keras.src.callbacks.history.History at 0x7c5f23990cd0>"},"metadata":{}}],"execution_count":26},{"cell_type":"code","source":"# Get team_1 from the tournament data\ninput_1 = games_tourney['team_1']\n\n# Get team_2 from the tournament data\ninput_2 = games_tourney['team_2']\n\n# Evaluate the model using these inputs\nprint(model.evaluate([input_1, input_2], games_tourney['score_diff'], verbose=False))","metadata":{"trusted":true,"execution":{"iopub.status.busy":"2025-02-08T20:40:22.730079Z","iopub.execute_input":"2025-02-08T20:40:22.730505Z","iopub.status.idle":"2025-02-08T20:40:22.951979Z","shell.execute_reply.started":"2025-02-08T20:40:22.730476Z","shell.execute_reply":"2025-02-08T20:40:22.950574Z"}},"outputs":[{"name":"stdout","text":"11.68106460571289\n","output_type":"stream"}],"execution_count":27}]}